
services:
  # Redis Stack for production (캐시 및 세션 저장소)
  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack-prod
    ports:
      - "6380:6379"  # 개발환경과 포트 분리
    networks:
      - text-to-sql-network
    volumes:
      - redis-prod-data:/data

  # Backend API (FastAPI)
  backend:
    build: ./backend
    container_name: text-to-sql-backend
    ports:
      - "8070:8000"  # 외부:8070 -> 내부:8000
    environment:
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME}
      - APP_DATABASE_URL=sqlite:///app_data.db
      - REDIS_URL=redis://redis-stack:6379
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_DAYS=${REFRESH_TOKEN_EXPIRE_DAYS}
      - NODE_ENV=production
    networks:
      - text-to-sql-network
    depends_on:
      - redis-stack
    volumes:
      - ./backend:/app
      - backend-data:/app/data
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  # Frontend (Vue.js) - Production Build
  frontend:
    build: 
      context: ./frontend
      args:
        VITE_API_BASE_URL: "/api"
    container_name: text-to-sql-frontend
    ports:
      - "8080:80"  # 외부:8080 -> 내부:80 (nginx)
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - text-to-sql-network

networks:
  text-to-sql-network:
    driver: bridge

volumes:
  redis-prod-data:
  backend-data:
